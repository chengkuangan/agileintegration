---

- name: Get SSO token
  shell: "curl --insecure -X POST 'http://{{sso_app_name}}-{{sso_namespace}}.{{ocp_apps_domain}}/auth/realms/master/protocol/openid-connect/token' \
  -H 'Content-Type: application/x-www-form-urlencoded' -d 'username={{ rhsso_admin_username | default('keyadmin') }}' -d 'password={{ rhsso_admin_password | default('keypassword') }}' -d 'grant_type=password' -d 'client_id=admin-cli'"
  register: token_text

- set_fact: TKN={{ (token_text.stdout | from_json).access_token }}

# - debug: var=TKN

- name: Get Apicurio realm
  uri:
    url: "{{apicurio_realm_url}}"
    return_content: yes
  register: apicurio_realm

# - debug: var=apicurio_realm.content

- set_fact: realm={{ apicurio_realm.content | regex_replace('APICURIO_UI_URL', 'http://' + apicurio_app_name + '.' + ocp_apps_domain) }}

# - debug: var=realm

- name: Create Apicurio Realm
  uri: 
    url: 'http://{{sso_app_name}}-{{sso_namespace}}.{{ocp_apps_domain}}/auth/admin/realms'
    method: POST
    body: "{{ realm }}"
    body_format: json
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{ TKN }}"
    return_content: yes
    validate_certs: no
    status_code: [201, 409]

- name: Create Apicurio users
  uri: 
    url: 'http://{{sso_app_name}}-{{sso_namespace}}.{{ocp_apps_domain}}/auth/admin/realms/{{apicurio_namespace}}/users'
    method: POST
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{ TKN }}"
    body: "{\"username\":\"{{ item }}\",\"enabled\":true,\"firstName\":\"{{ item }}\",\"credentials\":[{\"type\":\"password\",\"value\":\"{{apicurio_user_password}}\",\"temporary\":false}]}"
    body_format: json
    validate_certs: no
    status_code: [201, 409]
  with_sequence: start=1 end={{ apicurio_user_no }} format="{{apicurio_username_prefix}}%d"

- name: Get microcks-serviceaccount client-id
  uri: 
    url: 'http://{{sso_app_name}}-{{sso_namespace}}.{{ocp_apps_domain}}/auth/admin/realms/{{microcks_namespace}}/clients/'
    method: GET
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{ TKN }}"
    return_content: yes
    validate_certs: no
    status_code: [200]
  register: microcks_serviceaccount

- set_fact: MICROCKS_CLIENT_ID={{ (microcks_serviceaccount | json_query("json[?clientId=='microcks-serviceaccount']") )[0].id }}
- debug: var=MICROCKS_CLIENT_ID

- name: Get microcks-serviceaccount client-secret
  uri: 
    url: 'http://{{sso_app_name}}-{{sso_namespace}}.{{ocp_apps_domain}}/auth/admin/realms/{{microcks_namespace}}/clients/{{MICROCKS_CLIENT_ID}}/client-secret'
    method: GET
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{ TKN }}"
    return_content: yes
    validate_certs: no
    status_code: [200]
  register: microcks_client_secret

- set_fact: MICROCKS_CLIENT_SECRET={{ microcks_client_secret.json.value }}
- debug: var=MICROCKS_CLIENT_SECRET

- name: Create Apicurio app
  shell: "oc new-app -f {{ apicurio_template_url }} {{apicurio_template_parameters}} -n {{ apicurio_namespace }}"
  register: apicurio_create
  failed_when: apicurio_create.stderr != '' and 'already exists' not in apicurio_create.stderr
