---
#- debug:
#    msg: "curl --insecure -X POST 'http://{{sso_app_name}}-{{sso_namespace}}.{{ocp_apps_domain}}/auth/realms/master/protocol/openid-connect/token' \
#  -H 'Content-Type: application/x-www-form-urlencoded' -d 'username={{ rhsso_admin_username | default('keyadmin') }}' -d 'password={{ rhsso_admin_password | default('keypassword') }}' -d 'grant_type=password' -d 'client_id=admin-cli'"

- name: Get SSO token
  shell: "curl --insecure -X POST 'http://{{sso_app_name}}-{{sso_namespace}}.{{ocp_apps_domain}}/auth/realms/master/protocol/openid-connect/token' \
  -H 'Content-Type: application/x-www-form-urlencoded' -d 'username={{ rhsso_admin_username | default('keyadmin') }}' -d 'password={{ rhsso_admin_password | default('keypassword') }}' -d 'grant_type=password' -d 'client_id=admin-cli'"
  register: token_text

- set_fact: TKN={{ (token_text.stdout | from_json).access_token }}

# - debug: var=TKN

- name: Get Microcks realm
  uri:
    url: '{{microcks_realm_url}}'
    return_content: yes
  register: microcks_realm

# - debug: var=microcks_realm.content

- set_fact: realm={{ microcks_realm.content | regex_replace('MICROCKS_UI_URL', 'http://' + microcks_app_name + '.' + ocp_apps_domain) }}

#- debug: var=realm

- name: Create Microcks Realm
  uri: 
    url: 'http://{{sso_app_name}}-{{sso_namespace}}.{{ocp_apps_domain}}/auth/admin/realms'
    method: POST
    body: "{{ realm }}"
    body_format: json
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{ TKN }}"
    return_content: yes
    validate_certs: no
    status_code: [201, 409]  

- name: Create Microcks users
  uri: 
    url: 'http://{{sso_app_name}}-{{sso_namespace}}.{{ocp_apps_domain}}/auth/admin/realms/{{microcks_namespace}}/users'
    method: POST
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{ TKN }}"
    body: "{\"username\":\"{{ item }}\",\"enabled\":true,\"firstName\":\"{{ item }}\",\"credentials\":[{\"type\":\"password\",\"value\":\"{{microcks_user_password}}\",\"temporary\":false}]}"
    body_format: json
    validate_certs: no
    status_code: [201, 409]
  with_sequence: start=1 end={{ microcks_user_no }} format="{{microcks_username_prefix}}%d"


- name: Create Microcks app
  shell: "oc new-app -f {{microcks_template_url}} {{microcks_template_parameters}} -n {{ microcks_namespace }}"
  register: create_microcks_app
  failed_when: create_microcks_app.stderr != '' and 'already exists' not in create_microcks_app.stderr

- name: patch microcks env
  shell: "oc set env dc/microcks KEYCLOAK_URL=http://{{sso_app_name}}-{{sso_namespace}}.{{ ocp_apps_domain }}/auth -n {{microcks_namespace}}"
  register: oc_cmd
  failed_when: oc_cmd.rc != 0  
